<testsuites id="" name="" tests="18" failures="2" skipped="0" errors="0" time="17.65809">
<testsuite name="tests\API-Tests\pet.api.spec.js" timestamp="2025-04-22T13:15:29.563Z" hostname="" tests="4" failures="1" skipped="0" time="7.804" errors="0">
<testcase name="Pet Service API Tests › Pet Service - Get pet by id" classname="tests\API-Tests\pet.api.spec.js" time="2.162">
</testcase>
<testcase name="Pet Service API Tests › Pet Service - Update existing pet" classname="tests\API-Tests\pet.api.spec.js" time="2.16">
</testcase>
<testcase name="Pet Service API Tests › Pet Service - Delete pet" classname="tests\API-Tests\pet.api.spec.js" time="2.177">
</testcase>
<testcase name="Pet Service API Tests › Pet Service - Get deleted pet should fail" classname="tests\API-Tests\pet.api.spec.js" time="1.305">
<failure message="pet.api.spec.js:39:7 Pet Service - Get deleted pet should fail" type="FAILURE">
<![CDATA[  tests\API-Tests\pet.api.spec.js:39:7 › Pet Service API Tests › Pet Service - Get deleted pet should fail 

    Error: expect(received).toContain(expected) // indexOf

    Expected substring: "API Error: 404"
    Received string:    "Expected error but got success"

      42 |       throw new Error('Expected error but got success');
      43 |     } catch (err) {
    > 44 |       expect(err.message).toContain('API Error: 404');
         |                           ^
      45 |       expect(err.message).toContain('Pet not found');
      46 |     }
      47 |   });
        at C:\Repo\bg-js-gaming-automation\tests\API-Tests\pet.api.spec.js:44:27

    Error Context: test-results\tests-API-Tests-pet.api-Pe-d6bff-Get-deleted-pet-should-fail\error-context.md
]]>
</failure>
<system-out>
<![CDATA[Retrying getById in 1000ms...

[[ATTACHMENT|test-results\tests-API-Tests-pet.api-Pe-d6bff-Get-deleted-pet-should-fail\error-context.md]]
]]>
</system-out>
<system-err>
<![CDATA[getById attempt 1 failed: HTTP 200
]]>
</system-err>
</testcase>
</testsuite>
<testsuite name="tests\API-Tests\store.api.spec.js" timestamp="2025-04-22T13:15:29.563Z" hostname="" tests="3" failures="1" skipped="0" time="13.628" errors="0">
<testcase name="Store Service API Tests › Store Service - Get order by id" classname="tests\API-Tests\store.api.spec.js" time="2.162">
</testcase>
<testcase name="Store Service API Tests › Store Service - Delete order" classname="tests\API-Tests\store.api.spec.js" time="2.159">
</testcase>
<testcase name="Store Service API Tests › Store Service - Get deleted order should fail" classname="tests\API-Tests\store.api.spec.js" time="9.307">
<failure message="store.api.spec.js:31:7 Store Service - Get deleted order should fail" type="FAILURE">
<![CDATA[  tests\API-Tests\store.api.spec.js:31:7 › Store Service API Tests › Store Service - Get deleted order should fail 

    Error: expect(received).toContain(expected) // indexOf

    Expected substring: "API Error: 404"
    Received string:    "Expected error but got success"

      34 |       throw new Error('Expected error but got success'); // safety fallback
      35 |     } catch (err) {
    > 36 |       expect(err.message).toContain('API Error: 404');
         |                           ^
      37 |       expect(err.message).toContain('Order not found');
      38 |     }
      39 |   });
        at C:\Repo\bg-js-gaming-automation\tests\API-Tests\store.api.spec.js:36:27

    Error Context: test-results\tests-API-Tests-store.api--695d2-t-deleted-order-should-fail\error-context.md
]]>
</failure>
<system-out>
<![CDATA[Retrying getOrder in 1000ms...
Retrying getOrder in 1000ms...
Retrying getOrder in 1000ms...
Retrying getOrder in 1000ms...
Retrying getOrder in 1000ms...
Retrying getOrder in 1000ms...
Retrying getOrder in 1000ms...
Retrying getOrder in 1000ms...

[[ATTACHMENT|test-results\tests-API-Tests-store.api--695d2-t-deleted-order-should-fail\error-context.md]]
]]>
</system-out>
<system-err>
<![CDATA[getOrder attempt 1 failed: HTTP 200
getOrder attempt 1 failed: HTTP 404
getOrder attempt 1 failed: HTTP 404
getOrder attempt 1 failed: HTTP 404
getOrder attempt 1 failed: HTTP 404
getOrder attempt 1 failed: HTTP 404
getOrder attempt 1 failed: HTTP 404
getOrder attempt 1 failed: HTTP 404
]]>
</system-err>
</testcase>
</testsuite>
<testsuite name="tests\UI-Tests\catalogue.spec.js" timestamp="2025-04-22T13:15:29.563Z" hostname="" tests="2" failures="0" skipped="0" time="3.917" errors="0">
<testcase name="Catalogue Feature - Products loaded within catalogue are verified against api reponse" classname="tests\UI-Tests\catalogue.spec.js" time="1.591">
</testcase>
<testcase name="Catalogue Feature - Adding or Removing Products to cart will increase or decrease number of items in cart" classname="tests\UI-Tests\catalogue.spec.js" time="2.326">
</testcase>
</testsuite>
<testsuite name="tests\UI-Tests\login.spec.js" timestamp="2025-04-22T13:15:29.563Z" hostname="" tests="8" failures="0" skipped="0" time="13.241" errors="0">
<testcase name="Login Feature - Login Tests for Multiple Users Scenario › Login Scenario for standard_user" classname="tests\UI-Tests\login.spec.js" time="1.227">
</testcase>
<testcase name="Login Feature - Login Tests for Multiple Users Scenario › Login Scenario for locked_out_user" classname="tests\UI-Tests\login.spec.js" time="0.898">
</testcase>
<testcase name="Login Feature - Login Tests for Multiple Users Scenario › Login Scenario for problem_user" classname="tests\UI-Tests\login.spec.js" time="0.887">
</testcase>
<testcase name="Login Feature - Login Tests for Multiple Users Scenario › Login Scenario for performance_glitch_user" classname="tests\UI-Tests\login.spec.js" time="6.01">
</testcase>
<testcase name="Login Feature - Login Tests for Multiple Users Scenario › Login Scenario for error_user" classname="tests\UI-Tests\login.spec.js" time="0.805">
</testcase>
<testcase name="Login Feature - Login Tests for Multiple Users Scenario › Login Scenario for visual_user" classname="tests\UI-Tests\login.spec.js" time="0.825">
</testcase>
<testcase name="Login Feature - Login and Logout Successfully Scenario" classname="tests\UI-Tests\login.spec.js" time="1.791">
</testcase>
<testcase name="Login Feature - Login Negative Path -Incorrect Password Scenario" classname="tests\UI-Tests\login.spec.js" time="0.798">
</testcase>
</testsuite>
<testsuite name="tests\UI-Tests\order.spec.js" timestamp="2025-04-22T13:15:29.563Z" hostname="" tests="1" failures="0" skipped="0" time="1.871" errors="0">
<testcase name="Order Feature - The user performs an order successfully" classname="tests\UI-Tests\order.spec.js" time="1.871">
</testcase>
</testsuite>
</testsuites>